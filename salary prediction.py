# -*- coding: utf-8 -*-
"""MA22AI546_Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yb_QQfnSIneEnjNokvfd3NzjZdWlbNfn

**Importing all the required libraries**
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import matplotlib.pyplot as mtp  
import pandas as pd  
from sklearn.model_selection import train_test_split
from sklearn import linear_model 
import sklearn.metrics as sm
from google.colab import files
import io
# %matplotlib inline

"""**Uploading the file from local system**"""

data = files.upload()

"""**Reading the dataset**"""

salary_data = pd.read_csv(io.StringIO(data['Salary_dataset.csv'].decode('utf-8')))

"""**Checking top 5 value using head function**"""

salary_data.head(5)

"""**Checking the shape of the datasets**"""

salary_data.shape

"""**Droping Unamed column from the dataset**"""

salary_data.drop(['Unnamed: 0'], axis=1,inplace=True)

salary_data.head(5)

"""**Checking the column name**"""

salary_data.columns

"""**Check the data types of data**"""

salary_data.info()

"""**Finding the missing value**"""

salary_data.isnull().sum()

"""**Selecting Independent and dependent varriable**"""

x= salary_data.iloc[:, :-1].values  
y= salary_data.iloc[:, 1].values

x

y

"""**Spliting the data into Training Set and Test Set**"""

from sklearn.model_selection import train_test_split  
x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 1/3, random_state=0)

"""**Fitting the Simple Linear Regression to the Training Set**"""

from sklearn.linear_model import LinearRegression  
regressor= LinearRegression()  
regressor.fit(x_train, y_train)

regressor.score(x_test,y_test)

"""**Prediction of Test and Training set result**"""

y_pred= regressor.predict(x_test)  
x_pred= regressor.predict(x_train)

y_pred

x_pred

"""**Visualizing the Training set results**"""

mtp.scatter(x_train, y_train, color="green")   
mtp.plot(x_train, x_pred, color="red")    
mtp.title("Salary vs Experience (Training Dataset)")  
mtp.xlabel("Years of Experience")  
mtp.ylabel("Salary(In Rupees)")  
mtp.show()

"""**Visualizing the Test set results**"""

mtp.scatter(x_test, y_test, color="blue")   
mtp.plot(x_train, x_pred, color="red")    
mtp.title("Salary vs Experience (Test Dataset)")  
mtp.xlabel("Years of Experience")  
mtp.ylabel("Salary(In Rupees)")  
mtp.show()

"""**Model Evalution**"""

#Mean Squared 

mean_sq = round(sm.mean_squared_error(y_test, y_pred), 2)

#Explained Variance Score

explained_variance_score= round(sm.explained_variance_score(y_test, y_pred), 2)

#R2 Score

r_score = round(sm.r2_score(y_test, y_pred), 2)

print("Mean squared error =",mean_sq)
print("Explain variance score =",explained_variance_score)
print("R2 score =",r_score)

